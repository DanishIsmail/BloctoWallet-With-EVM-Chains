{"ast":null,"code":"import BloctoSDK from \"@blocto/sdk\";\nconst bloctoSDK = new BloctoSDK({\n  ethereum: {\n    // (required) chainId to be used\n    chainId: \"0x1\",\n    // (required) JSON RPC endpoint\n    rpc: \"https://eth-mainnet.g.alchemy.com/v2/b99BcR5f0XMTh6NlN2ktVIm3UcJOKS2x\"\n  }\n\n  // (optional) Blocto app ID\n  //   appId: \"YOUR_BLOCTO_APP_ID\",\n});\n\nexport const connectWallet = async () => {\n  try {\n    // EIP-1193 way (recommended)\n    const accounts = bloctoSDK.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    return accounts;\n    console.log(\"accounts==>\", accounts);\n  } catch (error) {\n    console.log(\"error==>\", error);\n  }\n};","map":{"version":3,"names":["BloctoSDK","bloctoSDK","ethereum","chainId","rpc","connectWallet","accounts","request","method","console","log","error"],"sources":["/Users/danishgakhar/Documents/BloctoApplication/bloctotest/src/config/index.js"],"sourcesContent":["import BloctoSDK from \"@blocto/sdk\";\n\nconst bloctoSDK = new BloctoSDK({\n  ethereum: {\n    // (required) chainId to be used\n    chainId: \"0x1\",\n    // (required) JSON RPC endpoint\n    rpc: \"https://eth-mainnet.g.alchemy.com/v2/b99BcR5f0XMTh6NlN2ktVIm3UcJOKS2x\",\n  },\n\n  // (optional) Blocto app ID\n  //   appId: \"YOUR_BLOCTO_APP_ID\",\n});\n\nexport const connectWallet = async () => {\n  try {\n    // EIP-1193 way (recommended)\n    const accounts = bloctoSDK.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    return accounts;\n    console.log(\"accounts==>\", accounts);\n  } catch (error) {\n    console.log(\"error==>\", error);\n  }\n};\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;AAEnC,MAAMC,SAAS,GAAG,IAAID,SAAS,CAAC;EAC9BE,QAAQ,EAAE;IACR;IACAC,OAAO,EAAE,KAAK;IACd;IACAC,GAAG,EAAE;EACP;;EAEA;EACA;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAGL,SAAS,CAACC,QAAQ,CAACK,OAAO,CAAC;MAC1CC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAOF,QAAQ;IACfG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,QAAQ,CAAC;EACtC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,KAAK,CAAC;EAChC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}